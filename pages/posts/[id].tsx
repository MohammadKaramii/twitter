import { ArrowLeftIcon } from "@heroicons/react/24/outline";
import Head from "next/head";
import CommentModal from "../../components/CommentModal";
import Sidebar from "../../components/Sidebar";
import Widgets from "../../components/Widgets";
import Post from "../../components/Post";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import {
  collection,
  doc,
  onSnapshot,
  orderBy,
  query,
} from "firebase/firestore";
import { database } from "../../firebase";
import Comment from "../../components/Comment";
import { NextPage } from "next";
import { DocumentData, DocumentSnapshot } from "firebase/firestore";
import { UserType, ArticleType } from "@/types";

interface HomeProps {
  newsResults: ArticleType;
  randomUsersResults: UserType;
}
const PostPage: NextPage<HomeProps> = ({ newsResults, randomUsersResults }) => {
  const router = useRouter();
  const { id } = router.query as { id: string };
  const [post, setPost] = useState<
    DocumentSnapshot<DocumentData> | undefined
  >();
  const [comments, setComments] = useState<DocumentData[]>([]);

 

  useEffect(() => {
    const unsubscribe = onSnapshot(doc(database, "posts", id), (snapshot) =>
      setPost(snapshot)
    );

    return () => unsubscribe();
  }, [id]);
  

  useEffect(() => {
    onSnapshot(
      query(
        collection(database, "posts", id, "comments"),
        orderBy("timestamp", "desc")
      ),
      (snapshot) => setComments(snapshot.docs)
    );
  }, [id]);

  return (
    <div>
      <Head>
        <title>Post Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen mx-auto">
       
        <Sidebar />

      

        <div className="xl:ml-[370px] border-l border-r border-gray-200  xl:min-w-[576px] sm:ml-[73px] flex-grow max-w-xl">
          <div className="flex items-center space-x-2  py-2 px-3 sticky top-0 z-50 bg-white border-b border-gray-200">
            <div className="hoverEffect" onClick={() => router.push("/")}>
              <ArrowLeftIcon className="h-5 " />
            </div>
            <h2 className="text-lg sm:text-xl font-bold cursor-pointer">
              Tweet
            </h2>
          </div>
          <div className="animate-fadeIn">
          <Post id={id} post={post} />
           </div>
          {comments.length > 0 && (
            <div className="">
             
                {comments.map((comment) => (
                <div key={comment.id} className="animate-fadeIn">
                    <Comment
                      
                      commentId={comment.id}
                      originalPostId={id}
                      comment={comment.data()}
                    />
                  
                </div>
                ))}
            </div>
          )}
        </div>



        <Widgets
          newsResults={newsResults}
          randomUsersResults={randomUsersResults}
        />


        <CommentModal />
      </main>
    </div>
  );
};



export const getServerSideProps = async () => {
  const [newsResponse, randomUsersResponse] = await Promise.all([
    fetch("https://saurav.tech/NewsAPI/top-headlines/category/business/us.json"),
    fetch("https://randomuser.me/api/?results=30&inc=name,login,picture")
  ]);

  const newsResults = await newsResponse.json();
  const randomUsersResults = await randomUsersResponse.json();

  return {
    props: {
      newsResults,
      randomUsersResults
    }
  };
};
export default PostPage;
